# frozen_string_literal: true

# Fallback when importing fails

def import_failure
  puts '[!] Try "bundle install"'
  exit(1)
end

# Libs

require 'erb'
require 'json'
require 'net/http'
begin
  require 'sinatra'
  require 'sinatra/reloader' if development?
  configure :development do
    register Sinatra::Reloader
    enable :reloader
  end
rescue LoadError
  import_failure
end
begin
  require 'sanitize'
rescue LoadError
  import_failure
end

require_relative 'configuration.rb'
require_relative 'scan.rb'
require_relative 'clean.rb'

# Note: https://gist.github.com/TeWu/1234573/29803f9cf380caddd2b0b1f6a57a4da03cf3ae55

# Request handler

get '/cve' do

  # Quick wash

  target = Sanitize.fragment(params['target'])
  year = Sanitize.fragment(params['year'])

  # # Lookup cache before in-real time parsing

  # if File.file?("cache/#{target}.hash")
  #   @names = File.read("cache/#{target}.hash")

  #   # Security/Eval: The use of eval is a serious security risk.
  #   # Only use when you are 1000% sure there is no user input
  #   # in-between.

  #   @names = eval(@names)
  # else
    @names = [get_cve(target, year)]
  # end

  erb :result
end

# Deliver status

get '/get' do

  # Quick wash

  status = Sanitize.fragment(params['status'])

  if status == 'code'
    '200'
  else
    halt 404, 'Unknown parameter requested.'
  end
end

# Default page

get '/*' do
  %(
      <!DOCTYPE html>
      <html lang='en'>
          <head>
              <title>CVE api</title>
              <meta charset="utf-8">
              <meta name="viewport" content="width=device-width, initial-scale=1">
              <link href="https://fonts.googleapis.com/css?family=Nunito:200,600" rel="stylesheet prefetch">
              <style>
                  html,
                  body {
                      background-color: #fff;
                      color: #636b6f;
                      font-family: 'Nunito', sans-serif;
                      font-weight: 200;
                      height: 100vh;
                      margin: 0;
                  }
                  .full-height {
                      height: 100vh;
                  }
                  .flex-center {
                      align-items: center;
                      display: flex;
                      justify-content: center;
                  }
                  .position-ref {
                      position: relative;
                  }
                  .top-right {
                      position: absolute;
                      right: 10px;
                      top: 18px;
                  }
                  .content {
                      text-align: center;
                  }
                  .title {
                      font-size: 84px;
                  }
                  .links>a {
                      color: #636b6f;
                      padding: 0 25px;
                      font-size: 13px;
                      font-weight: 600;
                      letter-spacing: .1rem;
                      text-decoration: none;
                      text-transform: uppercase;
                  }
                  .m-b-md {
                      margin-bottom: 30px;
                  }
              </style>
          </head>
          <body>
              <div class="flex-center position-ref full-height">
                  <div class="top-right links">
                  </div>
                  <div class="content">
                      <div class="title m-b-md">
                          CVE API
                      </div>
                  </div>
              </div>
          </body>
      </html>
  )
end

# Disallowed methods

post '/' do
  halt 403, 'Disallowed request method.'
end

put '/' do
  halt 403, 'Disallowed request method.'
end

patch '/' do
  halt 403, 'Disallowed request method.'
end

delete '/' do
  halt 403, 'Disallowed request method.'
end

options '/' do
  halt 403, 'Disallowed request method.'
end

link '/' do
  halt 403, 'Disallowed request method.'
end

unlink '/' do
  halt 403, 'Disallowed request method.'
end
