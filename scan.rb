# frozen_string_literal: true

require 'net/https'
require_relative 'general'

begin
  require 'nokogiri'
rescue LoadError
  import_failure
end

def args_filter(keyword)
  return if keyword.empty? do
    puts 'Missing target parameter.'
    puts 'Target parameter required!'
    leave(:usage_error)
  end
end

def http_get(formatted_link)
  # Merge argument with link as param
  link = URI(formatted_link)
  resp = ''

  # Start ssl session with host
  Net::HTTP.start(link.host, 443, use_ssl: true) do |https|
    request = Net::HTTP::Get.new(link)
    response = https.request(request)
    response.message == 'OK' ? resp += response.body : false
  end

  return resp
end

def get_cve(*args)
  # Display guide if no keyword or if too many provided
  args_filter(keyword) if args.length > 2 || args.length.zero?

  keyword = args[0]
  year = args[1]

  # Send get request to host
  resp = http_get('https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=' + keyword)

  # Parse the html
  raw = Nokogiri::HTML(resp)
  parsed = raw.css('#TableWithRules td')

  id = []
  cve = []
  year = []
  desc = []

  (0..parsed.count - 1).each do |index|
    if index.even?
      cve << parsed[index].text
      year << parsed[index].text.split('-')[1]
    else
      desc << parsed[index].text
    end
    id << index
  end

  # Display the available CVEs
  structure = {}
  (cve.count - 1).times do |x|
    structure[x] = { 'cve': cve[x], 'year': year[x], 'desc': desc[x] }
  end

  return structure
end
