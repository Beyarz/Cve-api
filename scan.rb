# frozen_string_literal: true

require 'net/https'
require_relative 'general.rb'

begin
  require 'nokogiri'
rescue LoadError
  import_failure
end

def args_filter(keyword)
  if keyword.empty?
    puts 'Missing target parameter.'
    puts 'Target parameter required!'
    leave(:usage_error)
  end
end

def http_get(formatted_link)
  # Merge argument with link as param
  link = URI(formatted_link)
  resp = ''

  # Start ssl session with host
  Net::HTTP.start(link.host, 443, use_ssl: true) do |https|
    request = Net::HTTP::Get.new(link)
    response = https.request(request)
    if response.message == 'OK'
      resp += response.body
    end
  end

  return resp
end

def get_cve(*args) # rubocop:disable Metrics/AbcSize
  # Display guide if no keyword or if too many provided
  if args.length > 2 || args.length == 0
    args_filter(keyword)
  end

  keyword = args[0]
  year = args[1]

  # Send get request to host
  resp = http_get('https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=' + keyword)

  # Parse the html
  raw = Nokogiri::HTML(resp)
  parsed = raw.css('#TableWithRules td')

  id = []
  cve = []
  year = []
  desc = []

  for each in 0..parsed.count - 1
    if each.even?
      cve << parsed[each].text
      year << parsed[each].text.split('-')[1]
    else
      desc << parsed[each].text
    end
    id << each
  end

  # Display the available CVEs
  structure = {}
  for x in 0..cve.count - 1
    structure[x] = { 'cve' => cve[x], 'year' => year[x], 'desc' => desc[x] }
  end

  return structure # rubocop:disable Style/RedundantReturn
end
